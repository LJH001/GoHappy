apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'gohappy'
            keyPassword '123456'
            storeFile file('gohappy.jks')
            storePassword '123456'
        }
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
    }
    signingConfigs {
        debug {
            // No debug config
        }
        release {
            storeFile file("gohappy.jks")
            storePassword "123456"
            keyAlias "gohappy"
            keyPassword "123456"
        }
    }

    // 多渠道打包配置
    productFlavors {
        // 生产环境
        onLineEvn {
            manifestPlaceholders = [
                    DRIVER_SERVER_ROOT_URL: project.Driver_Server_Root_Url_OnLine
            ]
        }

        // 新开发联调环境
        newDevEnv {
            manifestPlaceholders = [
                    DRIVER_SERVER_ROOT_URL: project.Driver_Server_Root_Url_NewDev
            ]
        }
    }
    // 开发使用时放开，本地调试时可以修改用指定的环境
      productFlavors.all { flavor ->
          flavor.manifestPlaceholders = [
                  DRIVER_SERVER_ROOT_URL: project.Driver_Server_Root_Url_NewDev
          ]
      }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile files('libs/fastjson-1.1.52.android.jar')
    //内存泄漏
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["crash-bugly"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["umeng-analytics"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
}
