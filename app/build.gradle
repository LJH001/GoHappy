apply plugin: 'com.android.application'
//apply plugin: 'android-apt'
apply plugin: 'com.neenbedankt.android-apt'

android {
    signingConfigs {
        config {
            keyAlias 'gohappy'
            keyPassword '123456'
            storeFile file('gohappy.jks')
            storePassword '123456'
        }
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
        multiDexEnabled true
        renderscriptTargetApi rootProject.ext.android.renderscriptTargetApi
        renderscriptSupportModeEnabled true
    }
    signingConfigs {
        debug {
            // No debug config
        }
        release {
            storeFile file("gohappy.jks")
            storePassword "123456"
            keyAlias "gohappy"
            keyPassword "123456"
        }
    }

    // 多渠道打包配置
    productFlavors {
        // 生产环境
        onLineEvn {
            manifestPlaceholders = [
                    DRIVER_SERVER_ROOT_URL: project.Driver_Server_Root_Url_OnLine
            ]
        }

        // 新开发联调环境
        newDevEnv {
            manifestPlaceholders = [
                    DRIVER_SERVER_ROOT_URL: project.Driver_Server_Root_Url_NewDev
            ]
        }
    }
    // 开发使用时放开，本地调试时可以修改用指定的环境
      productFlavors.all { flavor ->
          flavor.manifestPlaceholders = [
                  DRIVER_SERVER_ROOT_URL: project.Driver_Server_Root_Url_NewDev
          ]
      }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    //===========================Di===============================================//
    //控件注解
    compile rootProject.ext.dependencies["butterknife"]
 //   apt     rootProject.ext.dependencies["butterknife-apt"]

    compile rootProject.ext.dependencies["dagger2"]
    apt 'com.google.dagger:dagger-compiler:2.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //===========================NewtWork==========================================//
    //图片加载
    compile rootProject.ext.dependencies["glide"]
    //json解析
    compile rootProject.ext.dependencies["gson"]
    compile files('libs/fastjson-1.1.52.android.jar')

    //===========================UI===============================================//
    //圆形图片
    compile rootProject.ext.dependencies["circleimageview"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["appcompat-v7"]
    //material design风格设计
    compile rootProject.ext.dependencies["design"]

    //===========================性能检测==========================================//
    //过度绘制检测
     compile rootProject.ext.dependencies["blockcanary"]

    //内存泄漏检测
    debugCompile    rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile  rootProject.ext.dependencies["leakcanary-android-no-op"]

    //腾讯bugly崩溃统计
    compile rootProject.ext.dependencies["crash-bugly"]

    //===========================other=============================================//
    //友盟统计
    compile rootProject.ext.dependencies["umeng-analytics"]
    //权限管理
    compile rootProject.ext.dependencies["RxPermission"]
    //碎片
    compile rootProject.ext.dependencies["fragmentation"]

    compile rootProject.ext.dependencies["rxjava"]

    compile rootProject.ext.dependencies["rxandroid"]

    //方法数 超过 65535个
    compile rootProject.ext.dependencies["multidex"]

}
